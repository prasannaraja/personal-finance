{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/Shared/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/Components/Shared/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/add-catergory/add-catergory.component.ts","webpack:///src/app/add-catergory/add-catergory.component.html","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/category/category.component.ts","webpack:///src/app/category/category.component.html","webpack:///src/app/current/current.component.ts","webpack:///src/app/current/current.component.html","webpack:///src/app/daily/daily.component.ts","webpack:///src/app/daily/daily.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/group/group.component.ts","webpack:///src/app/group/group.component.html","webpack:///src/app/material-module.ts","webpack:///src/app/models/expenses.ts","webpack:///src/app/monthly/monthly.component.ts","webpack:///src/app/monthly/monthly.component.html","webpack:///src/app/validation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ConfirmDialogComponent","dialogRef","data","close","onDismiss","onConfirm","selector","templateUrl","styleUrls","AddCatergoryComponent","formBuilder","apiService","amountAlert","commentAlert","post","categories","removable","expenses","createForm","loadCategory","getCategory","subscribe","formGroup","group","expense","required","minLength","amount","comment","maxLength","category","categoryId","get","hasError","$event","selected","controls","setValue","alert","group_id","ACTIVE","exp","expense_text","expense_comment","expense_category","isActive","expense_date","created_date","created_by","addExpense","res","console","log","error","ApiService","http","headers","body","JSON","stringify","expenseId","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useValue","appearance","declarations","entryComponents","providers","bootstrap","CategoryDeletedSnackBarComponent","template","styles","CategoryComponent","dialog","_snackBar","displayedColumns","dataSource","paginator","open","maxWidth","message","afterClosed","dialogResult","deleteCategory","openFromComponent","duration","result","openDialog","ExpenseDeletedSnackBarComponent","CurrentComponent","loadExpenseTable","labels","f2","some","getExpense","deleteExpense","DailyComponent","DashboardComponent","GroupComponent","DemoMaterialModule","Expense","MonthlyComponent","ValidationService","validatorName","validatorValue","config","invalidCreditCard","invalidEmailAddress","invalidPassword","minlength","requiredLength","control","value","match","db","observer","setTimeout","indexOf","alreadyInUse","next","complete","enteredPassword","passwordCheck","test","requirements","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Inject } from \"@angular/core\";\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\n\nexport interface DialogData {\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: \"app-confirm-dialog\",\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.css\"],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  dialogData: DialogData;\n  title: string;\n  message: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  onConfirm(): void {\n    // Close the dialog, return true\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    // Close the dialog, return false\n    this.dialogRef.close(false);\n  }\n}\n","<mat-card fxLayoutGap>\n\n    <p mat-dialog-title>{{data.title}}</p>\n\n    <p display-2>{{data.message}}</p>\n\n\n    <div mat-dialog-actions>\n        <button mat-button (click)=\"onDismiss()\">No</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Yes</button>\n    </div>\n</mat-card>","import { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { ValidationService } from \"../validation.service\";\nimport { startWith, map } from \"rxjs/operators\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { ApiService } from \"../api.service\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { Expense } from \"../models/expenses\";\n\n@Component({\n  selector: \"app-add-catergory\",\n  templateUrl: \"./add-catergory.component.html\",\n  styleUrls: [\"./add-catergory.component.css\"],\n})\nexport class AddCatergoryComponent implements OnInit {\n  formGroup: FormGroup;\n  amountAlert: string = \"This field is required\";\n  commentAlert: string = \"comment can be max 100 char\";\n  post: any = \"\";\n  categories: any = \"\";\n  removable: boolean = false;\n  expenses: any = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<AddCatergoryComponent>\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.loadCategory();\n  }\n\n  loadCategory() {\n    this.apiService.getCategory().subscribe((categories: any) => {\n      this.categories = categories.data;\n    });\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      expense: [null, [Validators.required, Validators.minLength(1)]],\n      amount: [null, Validators.required],\n      comment: [null, [Validators.required, Validators.maxLength(100)]],\n      category: \"\",\n      categoryId: \"\",\n    });\n  }\n\n  getErrorExpense() {\n    return this.formGroup.get(\"expense\").hasError(\"required\")\n      ? \"Field is required\"\n      : \"\";\n  }\n\n  changeSelected($event, category): void {\n    category.selected = $event.selected;\n    this.formGroup.controls[\"categoryId\"].setValue(category.id);\n    alert(category.group_id);\n    if ((category.group_id = 1)) {\n    }\n  }\n\n  onSubmit(data) {\n    debugger;\n    let ACTIVE = 1;\n    let exp = new Expense();\n    exp.expense_text = data.expense;\n    exp.amount = data.amount;\n    exp.expense_comment = data.comment;\n    exp.expense_category = data.categoryId;\n    exp.isActive = ACTIVE;\n    exp.expense_date = \"2020-08-20 17:51:52\";\n    exp.created_date = \"2020-08-20 17:51:52\";\n    exp.created_by = \"system\";\n\n    this.apiService.addExpense(exp).subscribe(\n      (res) => {\n        console.log(\"saved:\");\n        console.log(res);\n\n        this.dialogRef.close();\n      },\n      (error) => {\n        console.log(\"error:\");\n        console.log(error);\n      },\n      () => {\n        // 'onCompleted' callback.\n        // No errors, route to new page here\n      }\n    );\n  }\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5%\" fxLayoutAlign=\"center\"\n    class=\"example-container\" *ngIf=\"!post; else forminfo\" novalidate>\n\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"form\">\n        <div>\n            <!-- expense title -->\n            <mat-form-field class=\"form-element\" [style.width.px]=327>\n                <input matInput placeholder=\"Expense Information\" formControlName=\"expense\">\n                <mat-error *ngIf=\"!formGroup.controls['expense'].valid && formGroup.controls['expense'].touched\">\n                    {{ getErrorExpense() }}\n                </mat-error>\n            </mat-form-field>\n\n            <!-- amount field -->\n            <mat-form-field class=\"form-element\" [style.width.px]=127>\n                <input type=\"number\" matInput placeholder=\"Amount &#8377;\" formControlName=\"amount\">\n                <mat-error *ngIf=\"!formGroup.controls['amount'].valid && formGroup.controls['amount'].touched\">\n                    {{ amountAlert }}\n                </mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <!-- comment field -->\n        <mat-form-field class=\"form-element\" [style.width.px]=474>\n            <input matInput placeholder=\"Comment\" formControlName=\"comment\">\n            <mat-error *ngIf=\"!formGroup.controls['comment'].valid && formGroup.controls['comment'].touched\">\n                {{ commentAlert }}\n            </mat-error>\n        </mat-form-field>\n\n\n\n        <!-- frequently used expense category -->\n        <div>\n            <label style=\"color:gray\">Choose expense category : </label>\n        </div>\n        <br />\n        <mat-chip-list #chipList [multiple]=\"true\" [selectable]=\"true\" formControlName=\"category\">\n            <mat-chip *ngFor=\"let category of categories\" #chip=\"matChip\"\n                (click)=\"category.selected ? chip.deselect() : chip.selectViaInteraction()\"\n                [selected]=\"category.selected\" [selectable]=\"true\" class=\"leadr-category-chip\"\n                (selectionChange)=\"changeSelected($event, category)\">\n                {{category.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n        </mat-chip-list>\n        <br />\n\n        <div hidden>\n            <input type=\"hidden\" formControlName=\"categoryId\">\n        </div>\n\n        <!--slide toggel-->\n        <!-- others, when selected dropdown populates all category -->\n        <div hidden fxFlex=\"50%\">\n            <mat-slide-toggle>Other Category</mat-slide-toggle>\n        </div>\n\n\n        <br />\n        <!--submit button-->\n        <div fxFlex=\"50%\">\n            <div class=\"form-element\">\n                <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\"\n                    [disabled]=\"!formGroup.valid\">Submit\n                    Form</button>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n\n\n<!--form data : JSON format-->\n<ng-template #forminfo>\n    <div class=\"container\">\n        {{ post | json }}\n    </div>\n</ng-template>","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Expense } from \"./models/expenses\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Category } from \"./models/category\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  //api-expense\n\n  getExpense(): Observable<Expense[]> {\n    return this.http.get<Expense[]>(\"/api/expenses\");\n  }\n\n  addExpense(expense: Expense): Observable<any> {\n    const headers = { \"content-type\": \"application/json\" };\n    const body = JSON.stringify(expense);\n    return this.http.post(\"/api/expense/\", body, { headers: headers });\n  }\n\n  deleteExpense(expenseId: number) {\n    return this.http.delete(\"/api/expense/delete/\" + expenseId);\n  }\n\n  //api-category\n\n  getCategory(): Observable<Category[]> {\n    return this.http.get<Category[]>(\"/api/categories\");\n  }\n\n  addCategory(category: Category): Observable<any> {\n    const headers = { \"content-type\": \"application/json\" };\n    const body = JSON.stringify(category);\n    return this.http.post(\"/api/category/\", body, { headers: headers });\n  }\n\n  deleteCategory(categoryId: number) {\n    return this.http.delete(\"/api/category/delete/\" + categoryId);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DailyComponent } from \"./daily/daily.component\";\nimport { MonthlyComponent } from \"./monthly/monthly.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { CurrentComponent } from \"./current/current.component\";\nimport { CategoryComponent } from \"./category/category.component\";\nimport { GroupComponent } from \"./group/group.component\";\n\nconst routes: Routes = [\n  { path: \"dashboard\", component: DashboardComponent },\n  { path: \"category\", component: CategoryComponent },\n  { path: \"group\", component: GroupComponent },\n  { path: \"current-expense\", component: CurrentComponent },\n  { path: \"daily-expense\", component: DailyComponent },\n  { path: \"monthly-expense\", component: MonthlyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'personal-finance';\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon>menu</mat-icon>\n    </button>\n    <h1>SimpleFinance</h1>\n    <span class=\"menu-spacer\"></span>\n    <div>\n      <a mat-button [routerLink]=\"'/dashboard'\"> Dashboard </a>\n      <a mat-button [routerLink]=\"'/current-expense'\"> Current Expenses </a>\n      <a mat-button [routerLink]=\"'/monthly-expense'\"> Monthly Expenses </a>\n      <a mat-button [routerLink]=\"'/accounts'\"> Accounts </a>\n      <a mat-button [routerLink]=\"'/create-account'\"> Create Account </a>\n      <a mat-button [routerLink]=\"'/category'\"> Category </a>\n      <a mat-button [routerLink]=\"'/group'\"> Groups </a>\n      <a mat-button [routerLink]=\"'/activities'\"> Activities </a>\n      <a mat-button [routerLink]=\"'/create-activity'\"> Create Activity </a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"basic-container\">\n  <router-outlet></router-outlet>\n  <span class=\"version-info\">Current build: 10.1.3</span>\n</div>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { MonthlyComponent } from \"./monthly/monthly.component\";\nimport { DailyComponent } from \"./daily/daily.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { DemoMaterialModule } from \"./material-module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ValidationService } from \"./validation.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { CurrentComponent } from \"./current/current.component\";\nimport { ConfirmDialogComponent } from \"./Components/Shared/confirm-dialog/confirm-dialog.component\";\nimport { GroupComponent } from \"./group/group.component\";\nimport { CategoryComponent } from \"./category/category.component\";\nimport { AddCatergoryComponent } from './add-catergory/add-catergory.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonthlyComponent,\n    DailyComponent,\n    DashboardComponent,\n    CurrentComponent,\n    ConfirmDialogComponent,\n    GroupComponent,\n    CategoryComponent,\n    AddCatergoryComponent,\n  ],\n  entryComponents: [ConfirmDialogComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    DemoMaterialModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    ValidationService,\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: { appearance: \"fill\" },\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ApiService } from \"../api.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Expense } from \"../models/expenses\";\nimport { ConfirmDialogComponent } from \"../Components/Shared/confirm-dialog/confirm-dialog.component\";\nimport { ExpenseDeletedSnackBarComponent } from \"../current/current.component\";\nimport { DailyComponent } from \"../daily/daily.component\";\nimport { Category } from \"../models/category\";\nimport { AddCatergoryComponent } from '../add-catergory/add-catergory.component';\n\n@Component({\n  selector: \"category-deleted-snack-bar\",\n  template: `<span> <b>Alert</b> : Category Deleted Successfully! </span>`,\n  styles: [\n    `\n      .deleted-snack-bar {\n        color: hotpink;\n      }\n    `,\n  ],\n})\nexport class CategoryDeletedSnackBarComponent {}\n\n@Component({\n  selector: \"app-category\",\n  templateUrl: \"./category.component.html\",\n  styleUrls: [\"./category.component.css\"],\n})\nexport class CategoryComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"id\",\n    \"name\",\n    \"group_id\",\n    \"group\",\n    \"enabled\",\n    \"action\",\n  ];\n  dataSource: any;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    public dialog: MatDialog,\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.loadCategory();\n  }\n\n  loadCategory() {\n    this.apiService.getCategory().subscribe((category: any) => {\n      console.log(category);\n      this.dataSource = new MatTableDataSource<Category>(category.data);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  deleteCategory(categoryId: number) {\n    // let's call our modal window\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"800px\",\n      data: {\n        title: \"Are you sure?\",\n        message: \"You are about to delete that category \",\n      },\n    });\n\n    // listen to response\n    dialogRef.afterClosed().subscribe((dialogResult) => {\n      // if user pressed yes dialogResult will be true,\n      // if he pressed no - it will be false\n      if (dialogResult) {\n        this.apiService.deleteCategory(categoryId).subscribe(\n          (res) => {\n            this._snackBar.openFromComponent(CategoryDeletedSnackBarComponent, {\n              duration: 3000,\n            });\n            this.loadCategory();\n          },\n          (error) => {\n            console.log(\"error:\");\n            console.log(error);\n            alert(\"Category delete failed.\");\n          },\n          () => {\n            // 'onCompleted' callback.\n            // No errors, route to new page here\n          }\n        );\n      }\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(AddCatergoryComponent);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`Dialog result: ${result}`);\n      this.loadCategory();\n    });\n  }\n}\n","<div>\n    <div class=\"example-button-row\">\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Add Category</button>\n    </div>\n</div>\n\n\n<br />\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- Category Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Category </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- GroupId Column -->\n        <ng-container matColumnDef=\"group_id\">\n            <th mat-header-cell *matHeaderCellDef> GroupId </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.group_id}} </td>\n        </ng-container>\n\n        <!-- Group Column -->\n        <ng-container matColumnDef=\"group\">\n            <th mat-header-cell *matHeaderCellDef> Group </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.group}} </td>\n        </ng-container>\n\n        <!-- Enabled Column -->\n        <ng-container matColumnDef=\"enabled\">\n            <th mat-header-cell *matHeaderCellDef> Enabled </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.enabled}} </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <i class=\"material-icons\" (click)=\"deleteCategory(element.id)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DailyComponent } from \"../daily/daily.component\";\nimport { Expense } from \"../models/expenses\";\nimport { ApiService } from \"../api.service\";\nimport { error } from \"protractor\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { ConfirmDialogComponent } from \"../Components/Shared/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n  selector: \"expense-deleted-snack-bar\",\n  template: `<span> <b>Alert</b> : Expense Deleted Successfully! </span>`,\n  styles: [\n    `\n      .deleted-snack-bar {\n        color: hotpink;\n      }\n    `,\n  ],\n})\nexport class ExpenseDeletedSnackBarComponent {}\n\n@Component({\n  selector: \"app-current\",\n  templateUrl: \"./current.component.html\",\n  styleUrls: [\"./current.component.css\"],\n})\nexport class CurrentComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"id\",\n    \"expense_text\",\n    \"amount\",\n    \"expense_group_name\",\n    \"expense_category_name\",\n    \"expense_comment\",\n    \"expense_date\",\n    \"expense_category\",\n    \"expense_group\",\n    \"action\",\n  ];\n  dataSource: any;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    public dialog: MatDialog,\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.loadExpenseTable();\n  }\n\n  loadExpenseTable() {\n\n    let labels = [];\n    let f2 = function () { \n      return true;\n    }\n    labels?.some(f2)\n\n    this.apiService.getExpense().subscribe((expenses: any) => {\n      console.log(expenses);\n      this.dataSource = new MatTableDataSource<Expense>(expenses.data);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  deleteExpense(expenseId: number) {\n    // let's call our modal window\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"800px\",\n      data: {\n        title: \"Are you sure?\",\n        message: \"You are about to delete that expense \",\n      },\n    });\n\n    // listen to response\n    dialogRef.afterClosed().subscribe((dialogResult) => {\n      // if user pressed yes dialogResult will be true,\n      // if he pressed no - it will be false\n      if (dialogResult) {\n        this.apiService.deleteExpense(expenseId).subscribe(\n          (res) => {\n            this._snackBar.openFromComponent(ExpenseDeletedSnackBarComponent, {\n              duration: 3000,\n            });\n            this.loadExpenseTable();\n          },\n          (error) => {\n            console.log(\"error:\");\n            console.log(error);\n            alert(\"expense delete failed.\");\n          },\n          () => {\n            // 'onCompleted' callback.\n            // No errors, route to new page here\n          }\n        );\n      }\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DailyComponent);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`Dialog result: ${result}`);\n      this.loadExpenseTable();\n    });\n  }\n}\n","<div>\n    <div class=\"example-button-row\">\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Add Expenses</button>\n    </div>\n</div>\n\n\n<br />\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- Expense Column -->\n        <ng-container matColumnDef=\"expense_text\">\n            <th mat-header-cell *matHeaderCellDef> Expense </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_text}} </td>\n        </ng-container>\n\n        <!-- Category Column -->\n        <ng-container matColumnDef=\"expense_category\">\n            <th mat-header-cell *matHeaderCellDef> CategoryId </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_category}} </td>\n        </ng-container>\n\n        <!-- Category Column -->\n        <ng-container matColumnDef=\"expense_category_name\">\n            <th mat-header-cell *matHeaderCellDef> Category </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_category_name}} </td>\n        </ng-container>\n\n        <!-- Category Column -->\n        <ng-container matColumnDef=\"expense_group\">\n            <th mat-header-cell *matHeaderCellDef> GroupId </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_group}} </td>\n        </ng-container>\n\n        <!-- Category Column -->\n        <ng-container matColumnDef=\"expense_group_name\">\n            <th mat-header-cell *matHeaderCellDef> Group </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_group_name}} </td>\n        </ng-container>\n\n        <!-- Amount Column -->\n        <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount| currency:\"&#8377;\"}} </td>\n        </ng-container>\n\n        <!-- Comment Column -->\n        <ng-container matColumnDef=\"expense_comment\">\n            <th mat-header-cell *matHeaderCellDef> Comment </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_comment}} </td>\n        </ng-container>\n\n        <!-- Date Column -->\n        <ng-container matColumnDef=\"expense_date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.expense_date|date}} </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <i class=\"material-icons\" (click)=\"deleteExpense(element.id)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { ValidationService } from \"../validation.service\";\nimport { startWith, map } from \"rxjs/operators\";\nimport { MatAccordion } from \"@angular/material/expansion\";\nimport { ApiService } from \"../api.service\";\nimport { Expense } from \"../models/expenses\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\n\ninterface ExpenseType {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: \"app-daily\",\n  templateUrl: \"./daily.component.html\",\n  styleUrls: [\"./daily.component.css\"],\n})\nexport class DailyComponent implements OnInit {\n  formGroup: FormGroup;\n  amountAlert: string = \"This field is required\";\n  commentAlert: string = \"comment can be max 100 char\";\n  post: any = \"\";\n  categories: any = \"\";\n  removable: boolean = false;\n  expenses: any = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<DailyComponent>\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.loadCategory();\n  }\n\n  loadCategory() {\n    this.apiService.getCategory().subscribe((categories: any) => {\n      this.categories = categories.data;\n    });\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      expense: [null, [Validators.required, Validators.minLength(1)]],\n      amount: [null, Validators.required],\n      comment: [null, [Validators.required, Validators.maxLength(100)]],\n      category: \"\",\n      categoryId: \"\",\n    });\n  }\n\n  getErrorExpense() {\n    return this.formGroup.get(\"expense\").hasError(\"required\")\n      ? \"Field is required\"\n      : \"\";\n  }\n\n  changeSelected($event, category): void {\n    category.selected = $event.selected;\n    this.formGroup.controls[\"categoryId\"].setValue(category.id);\n    alert(category.group_id);\n    if ((category.group_id = 1)) {\n      \n    }\n  }\n\n  onSubmit(data) {\n    debugger;\n    let ACTIVE = 1;\n    let exp = new Expense();\n    exp.expense_text = data.expense;\n    exp.amount = data.amount;\n    exp.expense_comment = data.comment;\n    exp.expense_category = data.categoryId;\n    exp.isActive = ACTIVE;\n    exp.expense_date = \"2020-08-20 17:51:52\";\n    exp.created_date = \"2020-08-20 17:51:52\";\n    exp.created_by = \"system\";\n\n    this.apiService.addExpense(exp).subscribe(\n      (res) => {\n        console.log(\"saved:\");\n        console.log(res);\n\n        this.dialogRef.close();\n      },\n      (error) => {\n        console.log(\"error:\");\n        console.log(error);\n      },\n      () => {\n        // 'onCompleted' callback.\n        // No errors, route to new page here\n      }\n    );\n  }\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5%\" fxLayoutAlign=\"center\"\n  class=\"example-container\" *ngIf=\"!post; else forminfo\" novalidate>\n\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"form\">\n    <div>\n      <!-- expense title -->\n      <mat-form-field class=\"form-element\" [style.width.px]=327>\n        <input matInput placeholder=\"Expense Information\" formControlName=\"expense\">\n        <mat-error *ngIf=\"!formGroup.controls['expense'].valid && formGroup.controls['expense'].touched\">\n          {{ getErrorExpense() }}\n        </mat-error>\n      </mat-form-field>\n\n      <!-- amount field -->\n      <mat-form-field class=\"form-element\" [style.width.px]=127>\n        <input type=\"number\" matInput placeholder=\"Amount &#8377;\" formControlName=\"amount\">\n        <mat-error *ngIf=\"!formGroup.controls['amount'].valid && formGroup.controls['amount'].touched\">\n          {{ amountAlert }}\n        </mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <!-- comment field -->\n    <mat-form-field class=\"form-element\" [style.width.px]=474>\n      <input matInput placeholder=\"Comment\" formControlName=\"comment\">\n      <mat-error *ngIf=\"!formGroup.controls['comment'].valid && formGroup.controls['comment'].touched\">\n        {{ commentAlert }}\n      </mat-error>\n    </mat-form-field>\n\n\n\n    <!-- frequently used expense category -->\n    <div>\n      <label style=\"color:gray\">Choose expense category : </label>\n    </div>\n    <br />\n    <mat-chip-list #chipList [multiple]=\"true\" [selectable]=\"true\" formControlName=\"category\">\n      <mat-chip *ngFor=\"let category of categories\" #chip=\"matChip\"\n        (click)=\"category.selected ? chip.deselect() : chip.selectViaInteraction()\" [selected]=\"category.selected\"\n        [selectable]=\"true\" class=\"leadr-category-chip\" (selectionChange)=\"changeSelected($event, category)\">\n        {{category.name}}\n        <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n    <br />\n\n    <div hidden>\n      <input type=\"hidden\" formControlName=\"categoryId\">\n    </div>\n\n    <!--slide toggel-->\n    <!-- others, when selected dropdown populates all category -->\n    <div hidden fxFlex=\"50%\">\n      <mat-slide-toggle>Other Category</mat-slide-toggle>\n    </div>\n\n\n    <br />\n    <!--submit button-->\n    <div fxFlex=\"50%\">\n      <div class=\"form-element\">\n        <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\" [disabled]=\"!formGroup.valid\">Submit\n          Form</button>\n      </div>\n    </div>\n\n  </form>\n</div>\n\n\n\n<!--form data : JSON format-->\n<ng-template #forminfo>\n  <div class=\"container\">\n    {{ post | json }}\n  </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.css']\n})\nexport class GroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>group works!</p>\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","export class Expense {\n  id: number;\n  expense_text: string;\n  amount: number;\n  expense_comment: string;\n  expense_category: number;\n  expense_group: number;\n  isActive: number;\n  expense_date: string;\n  created_date: string;\n  created_by: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-monthly',\n  templateUrl: './monthly.component.html',\n  styleUrls: ['./monthly.component.css']\n})\nexport class MonthlyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"header\">\n  <table>\n    <tr>\n      <th class=\"income-first-column\"></th>\n      <th class=\"income-input-header\">JAN</th>\n      <th class=\"income-input-header\">FEB</th>\n      <th class=\"income-input-header\">MAR</th>\n      <th class=\"income-input-header\">APR</th>\n      <th class=\"income-input-header\">MAY</th>\n      <th class=\"income-input-header\">JUN</th>\n      <th class=\"income-input-header\">JUL</th>\n      <th class=\"income-input-header\">AUG</th>\n      <th class=\"income-input-header\">SEP</th>\n      <th class=\"income-input-header\">OCT</th>\n      <th class=\"income-input-header\">NOV</th>\n      <th class=\"income-input-header\">DEC</th>\n      <th class=\"income-input-header\">Total</th>\n      <th class=\"income-input-header\">Avg</th>\n    </tr>\n  </table>\n</div>\n<div id=\"income\">\n  <table>\n    <tr>\n      <td class=\"income-first-column\">Wages</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td class=\"income-first-column\">Intrest Income</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td class=\"income-first-column\">Dividends</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td class=\"income-first-column\">Gift Received</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td class=\"income-first-column\">Refund/Reimbursements</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td class=\"income-first-column\">Transfer From Savings</td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n      <td><input class=\"income-input\" disabled type=\"text\" /></td>\n    </tr>\n  </table>\n</div>","import { Observable } from \"rxjs/internal/Observable\";\n\nexport class ValidationService {\n  static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\n    let config = {\n      required: \"Required\",\n      invalidCreditCard: \"Is invalid credit card number\",\n      invalidEmailAddress: \"Invalid email address\",\n      invalidPassword:\n        \"Invalid password. Password must be at least 6 characters long, and contain a number.\",\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n    };\n\n    return config[validatorName];\n  }\n\n  static creditCardValidator(control) {\n    // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n    if (\n      control.value.match(\n        /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/\n      )\n    ) {\n      return null;\n    } else {\n      return { invalidCreditCard: true };\n    }\n  }\n\n  static emailValidator(control) {\n    // RFC 2822 compliant regex\n    if (\n      control.value.match(\n        /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n      )\n    ) {\n      return null;\n    } else {\n      return { invalidEmailAddress: true };\n    }\n  }\n\n  static passwordValidator(control) {\n    // {6,100}           - Assert password is between 6 and 100 characters\n    // (?=.*[0-9])       - Assert a string has at least one number\n    if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n      return null;\n    } else {\n      return { invalidPassword: true };\n    }\n  }\n\n  static checkInUseEmail(control) {\n    // mimic http database access\n    let db = [\"tony@gmail.com\"];\n    return new Observable((observer) => {\n      setTimeout(() => {\n        let result =\n          db.indexOf(control.value) !== -1 ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  static checkPassword(control) {\n    let enteredPassword = control.value;\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return !passwordCheck.test(enteredPassword) && enteredPassword\n      ? { requirements: true }\n      : null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}